<tokens>
  <identifier> #include </identifier>
  <stringConstant> Tokenfinder.h&quot; </stringConstant>
  <identifier> #include </identifier>
  <stringConstant> Tokens.h&quot; </stringConstant>
  <identifier> #include </identifier>
  <symbol> &lt; </symbol>
  <identifier> iostream </identifier>
  <symbol> &gt; </symbol>
  <identifier> using </identifier>
  <identifier> namespace </identifier>
  <identifier> std </identifier>
  <symbol> ; </symbol>
  <identifier> Tokenfinder::Tokenfinder </identifier>
  <symbol> ( </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> linenumber </identifier>
  <symbol> = </symbol>
  <integerConstant> 0 </integerConstant>
  <symbol> ; </symbol>
  <identifier> getline </identifier>
  <symbol> ( </symbol>
  <identifier> cin </identifier>
  <symbol> , </symbol>
  <identifier> line </identifier>
  <symbol> ) </symbol>
  <symbol> ; </symbol>
  <keyword> if </keyword>
  <symbol> ( </symbol>
  <identifier> line </identifier>
  <symbol> . </symbol>
  <identifier> find </identifier>
  <symbol> ( </symbol>
  <identifier> substr(0, line.find(&quot; </identifier>
  <identifier> line </identifier>
  <symbol> + </symbol>
  <symbol> = </symbol>
  <symbol> &apos; </symbol>
  <identifier> \r </identifier>
  <symbol> &apos; </symbol>
  <symbol> ; </symbol>
  <identifier> linenumber </identifier>
  <symbol> + </symbol>
  <symbol> + </symbol>
  <symbol> ; </symbol>
  <symbol> } </symbol>
  <identifier> index </identifier>
  <symbol> = </symbol>
  <integerConstant> 0 </integerConstant>
  <symbol> ; </symbol>
  <identifier> stringstatus </identifier>
  <symbol> = </symbol>
  <keyword> false </keyword>
  <symbol> ; </symbol>
  <identifier> commentstatus </identifier>
  <symbol> = </symbol>
  <keyword> false </keyword>
  <symbol> ; </symbol>
  <symbol> } </symbol>
  <identifier> string </identifier>
  <identifier> Tokenfinder::getNextToken </identifier>
  <symbol> ( </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> string </identifier>
  <identifier> temptoken </identifier>
  <symbol> ; </symbol>
  <identifier> string </identifier>
  <identifier> tokentype </identifier>
  <symbol> ; </symbol>
  <identifier> Tokens </identifier>
  <identifier> tokens </identifier>
  <symbol> ; </symbol>
  <keyword> if </keyword>
  <symbol> ( </symbol>
  <symbol> ( </symbol>
  <identifier> line </identifier>
  <symbol> . </symbol>
  <identifier> find </identifier>
  <symbol> ( </symbol>
  <stringConstant>  </stringConstant>
  <symbol> ) </symbol>
  <identifier> ! </identifier>
  <symbol> = </symbol>
  <identifier> std::string::npos </identifier>
  <symbol> ) </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> line </identifier>
  <identifier> tring::npos </identifier>
  <symbol> ) </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> commentstatus </identifier>
  <symbol> = </symbol>
  <keyword> false </keyword>
  <symbol> ; </symbol>
</tokens>
