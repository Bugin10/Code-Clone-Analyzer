<tokens>
  <identifier> #include </identifier>
  <symbol> &lt; </symbol>
  <identifier> iostream </identifier>
  <symbol> &gt; </symbol>
  <identifier> #include </identifier>
  <stringConstant> myxml.h </stringConstant>
  <identifier> using </identifier>
  <identifier> namespace </identifier>
  <identifier> std </identifier>
  <symbol> ; </symbol>
  <keyword> static </keyword>
  <keyword> int </keyword>
  <identifier> indents </identifier>
  <symbol> = </symbol>
  <integerConstant> 0 </integerConstant>
  <symbol> ; </symbol>
  <keyword> static </keyword>
  <identifier> bool </identifier>
  <identifier> hascontent </identifier>
  <symbol> = </symbol>
  <keyword> true </keyword>
  <symbol> ; </symbol>
  <keyword> void </keyword>
  <identifier> myxml::addnode </identifier>
  <symbol> ( </symbol>
  <identifier> string </identifier>
  <identifier> element </identifier>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <keyword> if </keyword>
  <symbol> ( </symbol>
  <identifier> !hascontent </identifier>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> \r\n </stringConstant>
  <symbol> ; </symbol>
  <identifier> for </identifier>
  <symbol> ( </symbol>
  <keyword> int </keyword>
  <identifier> i </identifier>
  <symbol> = </symbol>
  <integerConstant> 0 </integerConstant>
  <symbol> ; </symbol>
  <identifier> i </identifier>
  <symbol> &lt; </symbol>
  <identifier> indents </identifier>
  <symbol> ; </symbol>
  <identifier> i </identifier>
  <symbol> + </symbol>
  <symbol> + </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant>    </stringConstant>
  <symbol> ; </symbol>
  <symbol> } </symbol>
  <symbol> } </symbol>
  <identifier> indents </identifier>
  <symbol> + </symbol>
  <symbol> + </symbol>
  <symbol> ; </symbol>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> &lt; </stringConstant>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <identifier> element </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> &gt; </stringConstant>
  <symbol> ; </symbol>
  <identifier> hascontent </identifier>
  <symbol> = </symbol>
  <keyword> false </keyword>
  <symbol> ; </symbol>
  <symbol> } </symbol>
  <keyword> void </keyword>
  <identifier> myxml::addcontent </identifier>
  <symbol> ( </symbol>
  <identifier> string </identifier>
  <identifier> content </identifier>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> hascontent </identifier>
  <symbol> = </symbol>
  <keyword> true </keyword>
  <symbol> ; </symbol>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant>   </stringConstant>
  <symbol> ; </symbol>
  <identifier> for </identifier>
  <symbol> ( </symbol>
  <identifier> unsigned </identifier>
  <keyword> int </keyword>
  <identifier> i </identifier>
  <symbol> = </symbol>
  <integerConstant> 0 </integerConstant>
  <symbol> ; </symbol>
  <identifier> i </identifier>
  <symbol> &lt; </symbol>
  <identifier> content </identifier>
  <symbol> . </symbol>
  <identifier> length </identifier>
  <symbol> ( </symbol>
  <symbol> ) </symbol>
  <symbol> ; </symbol>
  <identifier> i </identifier>
  <symbol> + </symbol>
  <symbol> + </symbol>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <keyword> char </keyword>
  <identifier> ch </identifier>
  <symbol> = </symbol>
  <identifier> content </identifier>
  <symbol> [ </symbol>
  <identifier> i </identifier>
  <symbol> ] </symbol>
  <symbol> ; </symbol>
  <identifier> switch </identifier>
  <symbol> ( </symbol>
  <identifier> ch </identifier>
  <symbol> ) </symbol>
  <symbol> { </symbol>
  <identifier> case </identifier>
  <symbol> &apos; </symbol>
  <symbol> &lt; </symbol>
  <symbol> &apos; </symbol>
  <identifier> : </identifier>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> &amp;lt; </stringConstant>
  <symbol> ; </symbol>
  <identifier> break </identifier>
  <symbol> ; </symbol>
  <identifier> case </identifier>
  <symbol> &apos; </symbol>
  <symbol> &gt; </symbol>
  <symbol> &apos; </symbol>
  <identifier> : </identifier>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> &amp;gt; </stringConstant>
  <symbol> ; </symbol>
  <identifier> break </identifier>
  <symbol> ; </symbol>
  <identifier> case </identifier>
  <symbol> &apos; </symbol>
  <symbol> &amp; </symbol>
  <symbol> &apos; </symbol>
  <identifier> : </identifier>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> &amp;amp; </stringConstant>
  <symbol> ; </symbol>
  <identifier> break </identifier>
  <symbol> ; </symbol>
  <identifier> case </identifier>
  <symbol> &apos; </symbol>
  <identifier> \ </identifier>
  <symbol> &apos; </symbol>
  <symbol> &apos; </symbol>
  <identifier> : </identifier>
  <identifier> cout </identifier>
  <symbol> &lt; </symbol>
  <symbol> &lt; </symbol>
  <stringConstant> &amp;apos; </stringConstant>
  <symbol> ; </symbol>
  <identifier> break </identifier>
  <symbol> ; </symbol>
  <identifier> case </identifier>
  <symbol> &apos; </symbol>
  <stringConstant>  </stringConstant>
  <symbol> &amp; </symbol>
  <identifier> quot </identifier>
  <symbol> ; </symbol>
</tokens>
